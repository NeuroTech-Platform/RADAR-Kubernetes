#!/usr/bin/env bash

cd "$(dirname "${BASH_SOURCE[0]}")/.."
. bin/util.sh

while getopts c:n:r:e: option
do
    case "${option}"
        in
        c)kubeContext=${OPTARG};;
        n)releaseNamespace=${OPTARG};;
        r)releaseName=${OPTARG};;
        e)helmError=${OPTARG};;
    esac
done

kubeContext=`echo $kubeContext | tr -d "'"`
releaseNamespace=`echo $releaseNamespace | tr -d "'"`
releaseName=`echo $releaseName | tr -d "'"`

kubeContext=${kubeContext:-default}
releaseNamespace=${releaseNamespace:-default}

if kubectl --context $kubeContext --namespace $releaseNamespace get pods -l "app.kubernetes.io/instance=$releaseName" -o yaml | yq " .items[].status.containerStatuses[].ready" | grep true; then
  echo "Applications seem to be healthly, installation successful."
  exit 0
fi

echo "------------------------ Namespace status ------------------------"
kubectl --context $kubeContext --namespace $releaseNamespace get pods -o wide
echo "------------------------ Pod status ------------------------"
kubectl --context $kubeContext --namespace $releaseNamespace get pods -l "app.kubernetes.io/instance=$releaseName" -o yaml
echo "------------------------ Previous logs ------------------------"
kubectl --context $kubeContext --namespace $releaseNamespace logs --previous=true --ignore-errors=true --all-containers=true --prefix=true --timestamps=true --tail=100 -l "app.kubernetes.io/instance=$releaseName"
echo "------------------------ Curent logs ------------------------"
kubectl --context $kubeContext --namespace $releaseNamespace logs --ignore-errors=true --all-containers=true --prefix=true --timestamps=true --tail=100 -l "app.kubernetes.io/instance=$releaseName"

exit 0
