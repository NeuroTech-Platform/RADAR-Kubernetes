# helmDefaults:
#   atomic: true

releases:
  - name: hdfs-datanode
    chart: ./charts/hdfs
    values:
    - "charts/hdfs/values-datanode.yaml"
    - image:
        tag: "{{ requiredEnv "HDFSIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "HDFS_DATANODE_REPLICA_COUNT" }}"
  - name: hdfs-namenode
    chart: ./charts/hdfs
    values:
    - "charts/hdfs/values-namenode.yaml"
    - image:
        tag: "{{ requiredEnv "HDFSIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "HDFS_NAMENODE_REPLICA_COUNT" }}"
  - name: management-portal
    chart: ./charts/management-portal
    values:
    - image:
        tag: "{{ requiredEnv "MANAGEMENT_PORTALIMAGE_TAG" }}"
      ingress:
        hosts:
         - "{{ requiredEnv "SERVER_NAME" }}"
      replicaCount: "{{ requiredEnv "MANAGEMENT_PORTAL_REPLICA_COUNT" }}"
      server_name: "{{ requiredEnv "SERVER_NAME" }}"
      postgres:
        password: "{{ requiredEnv "POSTGRES_PASSWORD" }}"
  - name: radar-backend-monitor
    chart: ./charts/radar-backend
    values:
    - "charts/radar-backend/values-monitor.yaml"
    - image:
        tag: "{{ requiredEnv "RADAR_BACKENDIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "RADAR_BACKEND_MONITOR_REPLICA_COUNT" }}"
      kafka_num_brokers: "{{ requiredEnv "KAFKA_NUM_BROKERS" }}"
  - name: radar-backend-stream
    chart: ./charts/radar-backend
    values:
    - "charts/radar-backend/values-stream.yaml"
    - image:
        tag: "{{ requiredEnv "RADAR_BACKENDIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "RADAR_BACKEND_STREAM_REPLICA_COUNT" }}"
      kafka_num_brokers: "{{ requiredEnv "KAFKA_NUM_BROKERS" }}"
  - name: radar-connect-hdfs-sink
    chart: ./charts/radar-connect-hdfs-sink
    values:
    - image:
        tag: "{{ requiredEnv "RADAR_CONNECT_HDFS_SINKIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "RADAR_CONNECT_HDFS_SINK_REPLICA_COUNT" }}"
      kafka_num_brokers: "{{ requiredEnv "KAFKA_NUM_BROKERS" }}"
  - name: radar-dashboard
    chart: ./charts/radar-dashboard
    values:
    - image:
        tag: "{{ requiredEnv "RADAR_DASHBOARDIMAGE_TAG" }}"
      ingress:
        hosts:
         - "{{ requiredEnv "SERVER_NAME" }}"
      replicaCount: "{{ requiredEnv "RADAR_DASHBOARD_REPLICA_COUNT" }}"
      server_name: "{{ requiredEnv "SERVER_NAME" }}"
  - name: radar-gateway
    chart: ./charts/radar-gateway
    values:
    - image:
        tag: "{{ requiredEnv "RADAR_GATEWAYIMAGE_TAG" }}"
      ingress:
        hosts:
         - "{{ requiredEnv "SERVER_NAME" }}"
      replicaCount: "{{ requiredEnv "RADAR_GATEWAY_REPLICA_COUNT" }}"
  - name: radar-hotstorage
    chart: ./charts/radar-hotstorage
    values:
    - image:
        tag: "{{ requiredEnv "RADAR_HOTSTORAGEIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "RADAR_HOTSTORAGE_REPLICA_COUNT" }}"
      hotstorage:
        password: "{{ requiredEnv "HOTSTORAGE_PASSWORD" }}"
  - name: radar-mongodb-connector
    chart: ./charts/radar-mongodb-connector
    values:
    - image:
        tag: "{{ requiredEnv "RADAR_MONGODB_CONNECTORIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "RADAR_MONGODB_CONNECTOR_REPLICA_COUNT" }}"
      kafka_num_brokers: "{{ requiredEnv "KAFKA_NUM_BROKERS" }}"
      mongodb:
        password: "{{ requiredEnv "HOTSTORAGE_PASSWORD" }}"
  - name: radar-output
    chart: ./charts/radar-output
    values:
    - image:
        tag: "{{ requiredEnv "RADAR_OUTPUTIMAGE_TAG" }}"
      num_threads: "{{ requiredEnv "RESTRUCTURE_NUM_THREADS" }}"
      replicaCount: "{{ requiredEnv "RADAR_OUTPUT_REPLICA_COUNT" }}"
      sftp_user_keys: |
        ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzNZZGH25F2jEFeFZqmhiePgA02D8jX/8+kRT9lflfKaPUP8wbyc4AmRzv7AFzW1sjVCzn400Aq+gxHmeiCp1wilPprYUTD9hl6mspvTBZlWhcxgisJZVMDt1+9BL8i6BnPFqYT3TwDDuaMXW105qaYwI+xlwvt6WY2ZTkRalwCpdRucYcpbt9cF7rXoQCebXLAypIeZF3yWUhD6GTtnZBuM5pAybUMyrtDZsn4lPSSqjP7bJqp4uiikwkJcT+xjrh06+8SgirN9W5z3+I4x66pg8CEs4b8it/5wAe1+2d0Yju7aCXvpDshERTbRvc6A1chj7SK2m/CxTdv00mtumH
  - name: radar-restapi
    chart: ./charts/radar-restapi
    values:
    - image:
        tag: "{{ requiredEnv "RADAR_RESTAPIIMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "RADAR_RESTAPI_REPLICA_COUNT" }}"
      ingress:
        hosts:
         - "{{ requiredEnv "SERVER_NAME" }}"
      mongodb:
        password: "{{ requiredEnv "HOTSTORAGE_PASSWORD" }}"
  - name: smtp
    chart: ./charts/smtp
    values:
    - replicaCount: "{{ requiredEnv "SMTP_REPLICA_COUNT" }}"
      smarthost:
        address: "{{ requiredEnv "SMTP_ADDRESS" }}"
        user: "{{ requiredEnv "SMTP_USER" }}"
        password: "{{ requiredEnv "SMTP_PASSWORD" }}"
