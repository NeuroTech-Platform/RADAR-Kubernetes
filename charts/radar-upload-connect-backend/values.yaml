# Default values for radar-upload-connect-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of radar-upload-connect-backend replicas to deploy
replicaCount: 2

image:
  # -- radar-upload-connect-backend image repository
  repository: radarbase/radar-upload-connect-backend
  # -- radar-upload-connect-backend image tag (immutable tags are recommended)
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.5.9
  # -- radar-upload-connect-backend image pull policy
  pullPolicy: IfNotPresent

# -- Docker registry secret names as an array
imagePullSecrets: []

# -- String to partially override radar-upload-connect-backend.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override radar-upload-connect-backend.fullname template with a string
fullnameOverride: ""

# -- Configure radar-upload-connect-backend pods' Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- Configure radar-upload-connect-backend containers' Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- radar-upload-connect-backend port
  port: 8085

ingress:
  # -- Enable ingress controller resource
  enabled: true
  # -- Annotations that define default ingress class, certificate issuer and proxy settings
  # @default -- check values.yaml
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-body-size: 200m
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
  # -- Path within the url structure
  path: "/upload/api/?(.*)"
  # -- Host to listen to requests to
  hosts:
    - localhost
  tls:
    # -- Name of the secret containing TLS certificates
    secretName: radar-base-tls

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

  # -- CPU/Memory resource requests
  requests:
    cpu: 100m
    memory: 2Gi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity labels for pod assignment
affinity: {}

# -- OAuth2 client id of the upload connect backend application
client_id: radar_upload_backend
# -- OAuth2 client secret of the upload connect backend
client_secret: secret
postgres:
  # -- Host name of the database to store uploaded data and metadata
  host: radar-upload-postgresql
  # -- Database username
  user: postgres
  # -- Database password
  password: password
# -- Host name of the management portal application
managementportal_host: management-portal
# -- Server name or domain name
serverName: localhost
