{{- if .Values.ingress.enabled -}}
{{- $fullName := include "cc-schema-registry-proxy.fullname" . -}}
{{- $path := .Values.ingress.path -}}
{{- $hosts := .Values.ingress.hosts -}}
{{- $externalName := .Values.service.externalName -}}
{{- $credentials := print .Values.cc.schemaRegistryApiKey ":" .Values.cc.schemaRegistryApiSecret -}}

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ include "cc-schema-registry-proxy.name" . }}
    helm.sh/chart: {{ include "cc-schema-registry-proxy.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
    nginx.ingress.kubernetes.io/upstream-vhost: {{ $externalName }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/backend-protocol: https
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Authorization "Basic {{ $credentials | quote | b64enc }}";

spec:
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
      {{- range $hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .Values.ingress.tls.secretName }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $path | quote }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: 443
  {{- end }}
{{- end }}
