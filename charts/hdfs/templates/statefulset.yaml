apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hdfs.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "hdfs.name" . }}
    helm.sh/chart: {{ include "hdfs.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: "{{ include "hdfs.fullname" . }}"
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hdfs.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hdfs.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["{{ .Values.args }}"]
          env:
          - name: HADOOP_HEAPSIZE
            value: "1000"
          - name: HADOOP_NAMENODE1_HOSTNAME
            value: "{{ .Values.hadoop_namenode1_hostname }}"
          {{- toYaml .Values.env | nindent 10 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - hdfs dfs -test -e /
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - hdfs dfs -test -e /
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mount }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
  {{- range .Values.volumes }}
  - metadata:
      name: {{ .name }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # storageClassName: ""
      resources:
        requests:
          storage: {{ .size }}
  {{- end }}
