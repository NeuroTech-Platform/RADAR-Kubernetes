apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "catalog-server.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "catalog-server.name" . }}
    helm.sh/chart: {{ include "catalog-server.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "catalog-server.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "catalog-server.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: kafka-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "{{ .Values.zookeeper }}"
        - name: KAFKA_SCHEMA_REGISTRY
          value: "{{ .Values.schema_registry }}"
        - name: KAFKA_NUM_BROKERS
          value: "{{ .Values.kafka_num_brokers }}"
        - name: RADAR_NUM_PARTITIONS
          value: "3"
        - name: RADAR_NUM_REPLICATION_FACTOR
          value: "3"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args:
            - radar-schemas-tools
            - serve
            - /schema/merged
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "{{ .Values.zookeeper }}"
          - name: KAFKA_SCHEMA_REGISTRY
            value: "{{ .Values.schema_registry }}"
          - name: KAFKA_NUM_BROKERS
            value: "{{ .Values.kafka_num_brokers }}"
          - name: RADAR_NUM_PARTITIONS
            value: "3"
          - name: RADAR_NUM_REPLICATION_FACTOR
            value: "{{ .Values.kafka_num_brokers }}"
          ports:
            - name: http
              containerPort: 9010
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -f localhost:9010/source-types
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -f localhost:9010/source-types
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /schema/conf
      volumes:
        - name: config
          hostPath:
            path: /radar/etc/schema
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
