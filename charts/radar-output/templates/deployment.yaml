apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "radar-output.fullname" . }}
  labels:
{{ include "radar-output.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "radar-output.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "radar-output.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: sftp
          image: "{{ .Values.image_sftp.repository }}:{{ .Values.image_sftp.tag }}"
          imagePullPolicy: {{ .Values.image_sftp.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 22
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: keys
              mountPath: /home/dl/.ssh/keys
            - name: users
              mountPath: /etc/sftp/
            - name: output
              mountPath: /home/dl/output
        - name: output
          image: "{{ .Values.image_output.repository }}:{{ .Values.image_output.tag }}"
          imagePullPolicy: {{ .Values.image_output.pullPolicy }}
          command:
            - radar-hdfs-restructure
          args:
            - -F
            - /etc/restructure/restructure.yml
            - -S
          env:
          - name: RADAR_HDFS_RESTRUCTURE_OPTS
            value: "-Xms250m -Xmx4g"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: output
              mountPath: /output
            - name: restructure
              mountPath:  /etc/restructure
      volumes:
        - name: keys
          configMap:
            name: {{ include "radar-output.fullname" . }}-keys
        - name: users
          secret:
            secretName: {{ include "radar-output.fullname" . }}
        - name: restructure
          configMap:
            name: {{ include "radar-output.fullname" . }}-restructure
        - name: output
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "radar-output.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
