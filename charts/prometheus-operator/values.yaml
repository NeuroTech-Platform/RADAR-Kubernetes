server_name: localhost

nginx_auth: |
  test:$2y$05$/okvi.SPEUOHzFuW/lao0ejB.2XBQMDw2pNVxag8R.nKVr5Y/7pGm

prometheus-operator:
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: "false"
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 2Gi
      ruleNamespaceSelector:
        namespaceSelector:
          matchNames:
          - default
          - monitoring
      ruleSelector:
        namespaceSelector:
          matchNames:
          - default
          - monitoring
      serviceMonitorNamespaceSelector:
        namespaceSelector:
          matchNames:
          - default
          - monitoring
      serviceMonitorSelector:
        namespaceSelector:
          matchNames:
          - default
          - monitoring

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        certmanager.k8s.io/acme-challenge-type: http01
        certmanager.k8s.io/issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: prometheus-operator-nginx-auth
      hosts:
        - localhost
      tls:
      - secretName: radar-base-tls
        hosts:
        - localhost

  alertmanager:
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi

    config:
      global:
        resolve_timeout: 5m
      receivers:
      - name: "null"
      route:
        group_by:
        - job
        group_interval: 5m
        group_wait: 30s
        receiver: "default"
        repeat_interval: 12h

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        certmanager.k8s.io/acme-challenge-type: http01
        certmanager.k8s.io/issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: prometheus-operator-nginx-auth
      hosts:
        - localhost
      tls:
      - secretName: radar-base-tls
        hosts:
        - localhost

  grafana:
    adminPassword: "prom-operator"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        certmanager.k8s.io/acme-challenge-type: http01
        certmanager.k8s.io/issuer: letsencrypt-prod
      hosts:
        - localhost
      tls:
      - secretName: radar-base-tls
        hosts:
        - localhost
