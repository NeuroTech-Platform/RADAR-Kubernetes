# Default values for management-portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- 	Number of Management Portal replicas to deploy
replicaCount: 2

image:
  # -- Management Portal image repository
  repository: radarbase/management-portal
  # -- Management Portal image tag (immutable tags are recommended)
  tag: 0.7.0
  # -- Management Portal image pull policy
  pullPolicy: IfNotPresent

# -- String to partially override management-portal.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override management-portal.fullname template with a string
fullnameOverride: ""

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- Management Portal port
  port: 8080

ingress:
  # -- Enable ingress controller resource
  enabled: true
  # -- Annotations that define default ingress class, certificate issuer and rate limiter
  # @default -- check values.yaml
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/server-snippet: |
      location /managementportal/oauth/ {
        # Allow 20 fast-following requests, like when authorizing a user.
        limit_req zone=login_limit burst=20;
      }
      location /managementportal/api/meta-token/ {
        limit_req zone=login_limit;
      }
  # -- Path within the url structure
  path: "/managementportal"
  # -- Hosts to accept requests from
  hosts:
    - localhost
  tls:
    # -- TLS Secret Name
    secretName: radar-base-tls


resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.

  # -- CPU/Memory resource limits
  limits:
    cpu: 2
    memory: 1.7Gi
  # -- CPU/Memory resource requests
  requests:
    cpu: 100m
    memory: 512Mi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity labels for pod assignment
affinity: {}

# B64 encoded Binary keystore file
# With helmfile, this can be set in a production.yaml.gotmpl
# file by setting
#keystore: {{ readFile "keystore.p12" | b64enc | quote }}
# or with SOPS
#keystore: {{ exec "sops" (list "-d" "keystore.p12") | b64enc | quote }}

postgres:
  host: postgresql
  port: 5432
  database: managementportal
  connection_parameters: ""
  user: postgres
  password: password
  ssl:
    enabled: false
    keystorepassword: keystorepassword

server_name: localhost
catalogue_server: catalog-server
managementportal:
  catalogue_server_enable_auto_import: "false"
  common_privacy_policy_url: http://info.thehyve.nl/radar-cns-privacy-policy
  oauth_checking_key_aliases_0: radarbase-managementportal-ec
  oauth_checking_key_aliases_1: selfsigned
  frontend_client_secret: xxx
  common_admin_password: xxx

smtp:
  enabled: false
  host: smtp
  port: 25
  username: username
  password: secret
  from: noreply@example.com
  starttls: false
  auth: true

oauth_clients:
  # -- Oauth Client configuration for pRMT
  # @default -- check values.yaml
  pRMT:
    enable: false
    resource_ids:
      - res_gateway
      - res_ManagementPortal
      - res_appconfig
    client_secret: ""
    scope:
      - MEASUREMENT.CREATE
      - PROJECT.READ
      - ROLE.READ
      - SOURCE.READ
      - SOURCEDATA.READ
      - SOURCETYPE.READ
      - SUBJECT.READ
      - SUBJECT.UPDATE
      - USER.READ
    authorized_grant_types:
      - refresh_token
      - authorization_code
    access_token_validity: 43200
    refresh_token_validity: 7948800
    additional_information: '{"dynamic_registration": true}'

  # -- Oauth Client configuration for aRMT
  # @default -- check values.yaml
  aRMT:
    enable: false
    resource_ids:
      - res_gateway
      - res_ManagementPortal
      - res_appconfig
    client_secret: ""
    scope:
      - MEASUREMENT.CREATE
      - PROJECT.READ
      - ROLE.READ
      - SOURCE.READ
      - SOURCEDATA.READ
      - SOURCETYPE.READ
      - SUBJECT.READ
      - SUBJECT.UPDATE
      - USER.READ
    authorized_grant_types:
      - refresh_token
      - authorization_code
    access_token_validity: 43200
    refresh_token_validity: 7948800
    additional_information: '{"dynamic_registration": true}'

  # -- Oauth Client configuration for THINC-IT
  # @default -- check values.yaml
  THINC-IT:
    enable: false
    resource_ids:
      - res_gateway
      - res_ManagementPortal
      - res_appconfig
    client_secret: ""
    scope:
      - MEASUREMENT.CREATE
      - PROJECT.READ
      - ROLE.READ
      - SOURCE.READ
      - SOURCEDATA.READ
      - SOURCETYPE.READ
      - SUBJECT.READ
      - SUBJECT.UPDATE
      - USER.READ
    authorized_grant_types:
      - refresh_token
      - authorization_code
    access_token_validity: 43200
    refresh_token_validity: 7948800
    additional_information: '{"dynamic_registration": true}'

  # -- Oauth Client configuration for REDCAP integrator
  # @default -- check values.yaml
  radar_redcap_integrator:
    enable: false
    resource_ids:
      - res_ManagementPortal
    client_secret: ""
    scope:
      - PROJECT.READ
      - SUBJECT.CREATE
      - SUBJECT.READ
      - SUBJECT.UPDATE
    authorized_grant_types:
      - client_credentials
    access_token_validity: 900

  # -- Oauth Client configuration for Upload backend
  # @default -- check values.yaml
  radar_upload_backend:
    enable: false
    resource_ids:
      - res_ManagementPortal
    client_secret: ""
    scope:
      - PROJECT.READ
      - SUBJECT.READ
    authorized_grant_types:
      - client_credentials
    access_token_validity: 900
    additional_information: '{"dynamic_registration": true}'

  # -- Oauth Client configuration for Upload connect
  # @default -- check values.yaml
  radar_upload_connect:
    enable: false
    resource_ids:
      - res_ManagementPortal
      - res_upload
    client_secret: ""
    scope:
      - MEASUREMENT.CREATE
      - PROJECT.READ
      - SOURCE.READ
      - SOURCETYPE.READ
      - SUBJECT.READ
      - SUBJECT.UPDATE
    authorized_grant_types:
      - client_credentials
    access_token_validity: 900

  # -- Oauth Client configuration for Upload frontend
  # @default -- check values.yaml
  radar_upload_frontend:
    enable: false
    resource_ids:
      - res_ManagementPortal
      - res_upload
    client_secret: ""
    scope:
      - MEASUREMENT.CREATE
      - PROJECT.READ
      - SOURCETYPE.READ
      - SUBJECT.READ
    authorized_grant_types:
      - authorization_code
    access_token_validity: 900
    redirect_uri:
      - /upload/login
      - http://localhost:8080/upload/login

  # -- Oauth Client configuration for Rest Sources Backend
  # @default -- check values.yaml
  radar_rest_sources_auth_backend:
    enable: false
    resource_ids:
      - res_ManagementPortal
      - res_upload
    client_secret: ""
    scope:
      - PROJECT.READ
      - SUBJECT.READ
    authorized_grant_types:
      - client_credentials
    access_token_validity: 900

  # -- Oauth Client configuration for Rest Sources Authorizer
  # @default -- check values.yaml
  radar_rest_sources_authorizer:
    enable: false
    resource_ids:
      - res_restAuthorizer
    client_secret: ""
    scope:
      - PROJECT.READ
      - SOURCETYPE.READ
      - SUBJECT.READ
      - SUBJECT.UPDATE
    authorized_grant_types:
      - authorization_code
    access_token_validity: 900
    redirect_uri:
      - /rest-sources/authorizer/login

  # -- Oauth Client configuration for Fitbit connector
  # @default -- check values.yaml
  radar_fitbit_connector:
    enable: false
    resource_ids:
      - res_restAuthorizer
    client_secret: ""
    scope:
      - SUBJECT.READ
      - MEASUREMENT.CREATE
    authorized_grant_types:
      - client_credentials
    access_token_validity: 900

  # -- Oauth Client configuration for Appconfig
  # @default -- check values.yaml
  radar_appconfig:
    enable: false
    resource_ids:
      - res_ManagementPortal
      - res_appconfig
    client_secret: ""
    scope:
      - MEASUREMENT.CREATE
      - OAUTHCLIENTS.READ
      - PROJECT.READ
      - SOURCETYPE.READ
      - SUBJECT.READ
    authorized_grant_types:
      - client_credentials
    access_token_validity: 900

  # -- Oauth Client configuration for Appconfig Frontend
  # @default -- check values.yaml
  appconfig_frontend:
    enable: false
    resource_ids:
      - res_appconfig
    client_secret: ""
    scope:
      - MEASUREMENT.CREATE
      - OAUTHCLIENTS.READ
      - PROJECT.CREATE
      - PROJECT.READ
      - PROJECT.UPDATE
      - SOURCETYPE.READ
      - SUBJECT.READ
      - SUBJECT.UPDATE
    authorized_grant_types:
      - authorization_code
      - refresh_token
    access_token_validity: 900
    refresh_token_validity: 78000
    redirect_uri:
      - /appconfig/login
    autoapprove:
      - MEASUREMENT.CREATE
      - OAUTHCLIENTS.READ
      - PROJECT.CREATE
      - PROJECT.READ
      - PROJECT.UPDATE
      - SOURCETYPE.READ
      - SUBJECT.READ
      - SUBJECT.UPDATE

  # -- Oauth Client configuration for Grafana Dashboard
  # @default -- check values.yaml
  grafana_dashboard:
    enable: false
    resource_ids:
      - res_ManagementPortal
    client_secret: ""
    scope:
      - USER.READ
    authorized_grant_types:
      - authorization_code
      - refresh_token
    access_token_validity: 900
    refresh_token_validity: 78000
    redirect_uri:
      - http://dashboard.localhost/login/generic_oauth
    autoapprove:
      - USER.READ
