server_name: localhost

nginx_auth: |
  test:$2y$05$/okvi.SPEUOHzFuW/lao0ejB.2XBQMDw2pNVxag8R.nKVr5Y/7pGm

kube-prometheus-stack:
  prometheusOperator:
    tls:
      enabled: false
    admissionWebhooks:
      enabled: false
      patch:
        enabled: false
    tlsProxy:
      enabled: false

  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: "false"
      replicas: 1
      resources:
        requests:
          memory: 1Gi
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 2Gi
      ruleNamespaceSelector:
        matchExpressions:
          - key: name
            operator: In
            values:
              - default
              - monitoring
              - graylog
              - cert-manager
              - kube-system
      serviceMonitorNamespaceSelector:
        matchExpressions:
          - key: name
            operator: In
            values:
              - default
              - monitoring
              - graylog
              - cert-manager
              - kube-system

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: kube-prometheus-stack-nginx-auth
      hosts:
        - localhost
      tls:
      - secretName: radar-base-tls-prometheus
        hosts:
        - localhost

  alertmanager:
    alertmanagerSpec:
      replicas: 1
      storage:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi
    templateFiles:
      template_1.tmpl: |-
          {{ define "__alertmanagerURL" }}{{ .ExternalURL }}/#/alerts?receiver={{ .Receiver }}{{ end }}

          {{ define "__subject" }}{{ range .Alerts }}{{ .Annotations.message }}
          {{ end }}{{ end }}

          {{ define "__description" }}{{ end }}

          {{ define "__text_alert_list" }}{{ range . }}Labels:
          {{ range .Labels.SortedPairs }} - {{ .Name }} = {{ .Value }}
          {{ end }}Annotations:
          {{ range .Annotations.SortedPairs }} - {{ .Name }} = {{ .Value }}
          {{ end }}Source: {{ .GeneratorURL }}
          {{ end }}{{ end }}

          {{ define "slack.default.title" }}{{ template "__subject" . }}{{ end }}
          {{ define "slack.default.username" }}{{ template "__alertmanager" . }}{{ end }}
          {{ define "slack.default.fallback" }}{{ template "slack.default.title" . }} | {{ template "slack.default.titlelink" . }}{{ end }}
          {{ define "slack.default.pretext" }}{{ end }}
          {{ define "slack.default.titlelink" }}{{ template "__alertmanagerURL" . }}{{ end }}
          {{ define "slack.default.iconemoji" }}{{ end }}
          {{ define "slack.default.iconurl" }}{{ end }}
          {{ define "slack.default.text" }}{{ end }}
          {{ define "slack.default.footer" }}{{ end }}
    config:
      global:
        resolve_timeout: 5m
      receivers:
      - name: "null"
      route:
        group_by:
        - job
        group_interval: 5m
        group_wait: 30s
        receiver: "default"
        repeat_interval: 12h
        routes: []

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: kube-prometheus-stack-nginx-auth
      hosts:
        - localhost
      tls:
      - secretName: radar-base-tls-alertmanager
        hosts:
        - localhost

  grafana:
    adminPassword: "prom-operator"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - localhost
      tls:
      - secretName: radar-base-tls-grafana
        hosts:
        - localhost
