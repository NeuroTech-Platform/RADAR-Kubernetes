bases:
- ../environments.yaml

---

{{ readFile "../etc/helmfile-templates.yaml" }}

releases:
  - name: cert-manager-letsencrypt
    namespace: cert-manager
    chart: radar/cert-manager-letsencrypt
    version: {{ .Values.cert_manager_letsencrypt._chart_version }}
    installed: {{ .Values.cert_manager_letsencrypt._install }}
    timeout: {{ add .Values.base_timeout .Values.cert_manager_letsencrypt._extra_timeout }}
    <<: *logFailedRelease
    set:
      - name: maintainerEmail
        value: {{ .Values.maintainer_email }}

  - name: cp-zookeeper
    chart: cp-radar/cp-zookeeper
    version: {{ .Values.cp_zookeeper._chart_version }}
    installed: {{ .Values.cp_zookeeper._install }}
    timeout: {{ add .Values.base_timeout .Values.cp_zookeeper._extra_timeout }}
    wait: true
    <<: *logFailedRelease
    values:
      - "../etc/cp-zookeeper/values.yaml"
      - {{ .Values.cp_zookeeper | toYaml | indent 8 | trim }}

  - name: cp-kafka
    chart: cp-radar/cp-kafka
    version: {{ .Values.cp_kafka._chart_version }}
    installed: {{ .Values.cp_kafka._install }}
    timeout: {{ add .Values.base_timeout .Values.cp_kafka._extra_timeout }}
    wait: true
    <<: *logFailedRelease
    values:
      - "../etc/cp-kafka/values.yaml"
      - {{ .Values.cp_kafka | toYaml | indent 8 | trim }}
    set:
      - name: brokers
        value: {{ .Values.kafka_num_brokers }}

  - name: cp-schema-registry
    chart: cp-radar/cp-schema-registry
    version: {{ .Values.cp_schema_registry._chart_version }}
    installed: {{ .Values.cp_schema_registry._install }}
    timeout: {{ add .Values.base_timeout .Values.cp_schema_registry._extra_timeout }}
    wait: true
    <<: *logFailedRelease
    values:
      - "../etc/cp-schema-registry/values.yaml"
      - {{ .Values.cp_schema_registry | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts[0].host
        value: "{{ .Values.server_name }}"
      - name: ingress.hosts[0].paths
        values: ["/schema/?(.*)"]
      - name: ingress.tls[0].secretName
        value: radar-base-tls
      - name: ingress.tls[0].hosts
        values: ["{{ .Values.server_name }}"]

  - name: catalog-server
    chart: radar/catalog-server
    version: {{ .Values.catalog_server._chart_version }}
    installed: {{ .Values.catalog_server._install }}
    timeout: {{ add .Values.base_timeout .Values.catalog_server._extra_timeout }}
    wait: true
    <<: *logFailedRelease
    values:
      - {{ .Values.catalog_server | toYaml | indent 8 | trim }}
      - {{ .Values.confluent_cloud | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: cc.enabled
        value: {{ .Values.confluent_cloud.enabled }}
      {{- if .Values.confluent_cloud.enabled }}
      - name: schema_registry
        value: {{ .Values.confluent_cloud.cc.schemaRegistryUrl }}
      {{ end }}

  - name: radar-home
    chart: radar/radar-home
    version: {{ .Values.radar_home._chart_version }}
    installed: {{ .Values.radar_home._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_home._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_home | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [ {{ .Values.server_name }} ]
      - name: s3.enabled
        value: {{ dig "s3" "enabled" .Values.minio._install .Values.radar_home }}
      - name: s3.url
        value: {{ dig "s3" "url" (printf "https://s3.%s/login" .Values.server_name) .Values.radar_home }}
      - name: dashboard.enabled
        value: {{ dig "dashboard" "enabled" .Values.radar_grafana._install .Values.radar_home }}
      - name: dashboard.url
        value: {{ dig "dashboard" "url" (printf "https://dashboard.%s/" .Values.server_name) .Values.radar_home }}
      - name: uploadPortal.enabled
        value: {{ dig "uploadPortal" "enabled" .Values.radar_upload_connect_frontend._install .Values.radar_home }}
      - name: restAuthorizer.enabled
        value: {{ dig "restAuthorizer" "enabled" .Values.radar_rest_sources_authorizer._install .Values.radar_home }}
      - name: monitoring.enabled
        value: {{ dig "monitoring" "enabled" .Values.kube_prometheus_stack._install .Values.radar_home }}
      - name: monitoring.url
        value: {{ dig "monitoring" "url" (printf "https://grafana.%s/login" .Values.server_name) .Values.radar_home }}
      - name: logging.enabled
        value: {{ dig "logging" "enabled" .Values.graylog._install .Values.radar_home }}
      - name: logging.url
        value: {{ dig "logging" "url" (printf "https://graylog.%s/" .Values.server_name) .Values.radar_home }}

  - name: kratos
    chart: radar/kratos
    version: {{ .Values.kratos._chart_version }}
    installed: {{ .Values.kratos._install }}
    timeout: {{ add .Values.base_timeout .Values.kratos._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/kratos/values.yaml"
      - {{ .Values.kratos | toYaml | indent 8 | trim }}
    set:
      - name: serverName
        value: {{ .Values.server_name }}
      - name: kratos.config.dsn
        value: postgres://{{ .Values.management_portal.postgres.user }}:{{ .Values.management_portal.postgres.password }}@{{ .Values.management_portal.postgres.host }}:{{ .Values.management_portal.postgres.port }}/{{ .Values | get "kratos.jdbc.database" "kratos" }}
      - name: kratos.config.courier.smtp.connection_uri
        #  Note: encoding of "/" in password is necessary for the smtp connection_uri because kratos is not able to handle this.
        value: smtp://{{ .Values.management_portal.smtp.username }}:{{ replace "/" "%2F" .Values.management_portal.smtp.password }}@{{ .Values.management_portal.smtp.host }}:{{ .Values | get "management_portal.smtp.port" 587 }}
      - name: kratos.config.serve.public.base_url
        value: https://{{ .Values.server_name }}/kratos/
      - name: kratos.config.serve.admin.base_url
        value: https://{{ .Values.server_name }}/admin/kratos/
      - name: kratos.config.serve.public.cors.allowed_origins
        values:
          - https://{{ .Values.server_name }}/kratos-ui/
      - name: kratos.config.selfservice.default_browser_return_url
        value: https://{{ .Values.server_name }}/managementportal
      - name: kratos.config.selfservice.allowed_return_urls
        values:
          - https://{{ .Values.server_name }}/
          # FIXME: http://localhost/ is not a valid return URL for production
          - http://{{ .Values.server_name }}/
      - name: kratos.config.selfservice.flows.error.ui_url
        value: https://{{ .Values.server_name }}/kratos-ui/error
      - name: kratos.config.selfservice.flows.settings.ui_url
        value: https://{{ .Values.server_name }}/kratos-ui/settings
      - name: kratos.config.selfservice.flows.recovery.ui_url
        value: https://{{ .Values.server_name }}/kratos-ui/recovery
      - name: kratos.config.selfservice.flows.registration.ui_url
        value: https://{{ .Values.server_name }}/kratos-ui/registration
      - name: kratos.config.selfservice.flows.login.ui_url
        value: https://{{ .Values.server_name }}/kratos-ui/login
      - name: kratos.config.selfservice.flows.logout.after.default_browser_return_url
        value: https://{{ .Values.server_name }}/kratos-ui/login
      - name: kratos.config.selfservice.flows.verification.ui_url
        value: https://{{ .Values.server_name }}/kratos-ui/verification
      - name: kratos.config.selfservice.flows.verification.after.default_browser_return_url
        value: https://{{ .Values.server_name }}/kratos-ui
      - name: kratos.config.selfservice.flows.settings.ui_url
        value: https://{{ .Values.server_name }}/kratos-ui/settings
      - name: ingress.public.hosts[0].host
        value: {{ .Values.server_name }}
      - name: ingress.admin.tls[0].hosts
        values:
          - {{ .Values.server_name }}
      - name: ingress.admin.hosts[0].host
        value: {{ .Values.server_name }}
      - name: ingress.public.tls[0].hosts
        values:
          - {{ .Values.server_name }}

  - name: kratos-selfservice-ui-node
    chart: radar/kratos-selfservice-ui-node
    version: {{ .Values.kratos_ui._chart_version }}
    installed: {{ .Values.kratos_ui._install }}
    timeout: {{ add .Values.base_timeout .Values.kratos_ui._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/kratos_ui/values.yaml"
      - {{ .Values.kratos_ui | toYaml | indent 8 | trim }}
    set:
      - name: serverName
        value: {{ .Values.server_name }}
      - name: ingress.hosts[0].host
        value: {{ .Values.server_name }}
      - name: ingress.tls[0].hosts
        values:
          - {{ .Values.server_name }}
      - name: kratosPublicUrl
        value: https://{{ .Values.server_name }}/kratos
      - name: kratosBrowserUrl
        value: https://{{ .Values.server_name }}/kratos
