# helmDefaults:
#   atomic: true

releases:
  - name: cert
    namespace: cert-manager
    chart: ./charts/cert
    values:
      - server_name: {{ requiredEnv "SERVER_NAME" }}
        maintainer_email: {{ requiredEnv "MAINTAINER_EMAIL" }}

  - name: prometheus
    chart: ./charts/prometheus
    namespace: monitoring
    values:
      - "charts/prometheus/origin-values.yaml"
      - "charts/prometheus/values.yaml"
      - prometheus:
          ingress:
            hosts: ["prometheus.{{ requiredEnv "SERVER_NAME" }}"]
            tls:
            - secretName: radar-base-tls
              hosts: ["prometheus.{{ requiredEnv "SERVER_NAME" }}"]
        alertmanager:
          ingress:
            hosts: ["alertmanager.{{ requiredEnv "SERVER_NAME" }}"]
            tls:
            - secretName: radar-base-tls
              hosts: ["alertmanager.{{ requiredEnv "SERVER_NAME" }}"]
        grafana:
          ingress:
            hosts: ["grafana.{{ requiredEnv "SERVER_NAME" }}"]
            tls:
            - secretName: radar-base-tls
              hosts: ["grafana.{{ requiredEnv "SERVER_NAME" }}"]
        receivers: |-
          slack_config:
            api_url: "{{ requiredEnv "MONITORING_SLACK_WEBHOOK_URL" }}"
            channel: "{{ requiredEnv "MONITORING_SLACK_CHANNEL" }}"
        nginx_auth: |
          "{{ requiredEnv "MONITORING_NGINX_AUTH" }}"

  - name: nginx-ingress
    chart: stable/nginx-ingress
    version: 1.6.16
    values:
      - "charts/nginx-ingress/values.yaml"
      - controller:
          replicaCount: {{ requiredEnv "NGINX_INGRESS_REPLICA_COUNT" }}

  - name: cp-kafka
    chart: ./cp-helm-charts/charts/cp-kafka
    values:
      - "charts/cp-kafka/values.yaml"
      - brokers: "{{ requiredEnv "KAFKA_NUM_BROKERS" }}"
        imageTag: "{{ requiredEnv "CP_KAFKA_IMAGE_TAG" }}"
  - name: cp-kafka-rest
    chart: ./cp-helm-charts/charts/cp-kafka-rest
    values:
      - "charts/cp-kafka-rest/values.yaml"
      - replicaCount: "{{ requiredEnv "CP_KAFKA_REST_REPLICA_COUNT" }}"
        imageTag: "{{ requiredEnv "CP_KAFKA_REST_IMAGE_TAG" }}"
  - name: cp-schema-registry
    chart: ./cp-helm-charts/charts/cp-schema-registry
    values:
      - "charts/cp-schema-registry/values.yaml"
      - replicaCount: "{{ requiredEnv "CP_SCHEMA_REGISTRY_REPLICA_COUNT" }}"
        imageTag: "{{ requiredEnv "CP_SCHEMA_REGISTRY_IMAGE_TAG" }}"
        ingress:
          hosts:
            - host: "{{ requiredEnv "SERVER_NAME" }}"
              paths: ["/schema/?(.*)"]
          tls:
          - secretName: radar-base-tls
            hosts:
            - "{{ requiredEnv "SERVER_NAME" }}"
  - name: cp-zookeeper
    chart: ./cp-helm-charts/charts/cp-zookeeper
    values:
      - "charts/cp-zookeeper/values.yaml"
      - imageTag: "{{ requiredEnv "CP_ZOOKEEPER_IMAGE_TAG" }}"
        servers: "{{ requiredEnv "KAFKA_NUM_BROKERS" }}"
  - name: kafka-manager
    chart: stable/kafka-manager
    version: 2.1.5
    values:
      - "charts/kafka-manager/values.yaml"
      - image:
          tag: "{{ requiredEnv "KAFKA_MANAGER_IMAGE_TAG" }}"
        ingress:
          hosts:
            - "{{ requiredEnv "SERVER_NAME" }}"
          tls:
          - secretName: radar-base-tls
            hosts: ["{{ requiredEnv "SERVER_NAME" }}"]
          basicAuth:
            enabled: true
            username: "{{ requiredEnv "KAFKA_MANAGER_USERNAME" }}"
            password: "{{ requiredEnv "KAFKA_MANAGER_PASSWORD" }}"
  - name: postgresql
    chart: stable/postgresql
    version: 5.3.3
    values:
      - "charts/postgresql/values.yaml"
      - replication:
          password: "{{ requiredEnv "POSTGRES_PASSWORD" }}"
        postgresqlPassword: "{{ requiredEnv "POSTGRES_PASSWORD" }}"
        image:
          tag: "{{ requiredEnv "POSTGRESQL_IMAGE_TAG" }}"

  - name: catalog-server
    chart: ./charts/catalog-server
    values:
    - image:
        tag: "{{ requiredEnv "CATALOG_SERVER_IMAGE_TAG" }}"
      replicaCount: "{{ requiredEnv "CATALOG_SERVER_REPLICA_COUNT" }}"
      kafka_num_brokers: "{{ requiredEnv "KAFKA_NUM_BROKERS" }}"
