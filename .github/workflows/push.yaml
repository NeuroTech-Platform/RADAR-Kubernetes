name: CI
on:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: Cleanup repo folder
      run: |
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./

    - uses: actions/checkout@v1.0.0

    - name: Setup helmfile
      uses: mamezou-tech/setup-helmfile@v1.1.0

    - name: Set up helmfile config
      run: cp .github/environments.yaml environments.yaml

    - name: Run helmfile template
      run: |
        sudo apt install -y openjdk-11-jre-headless
        DNAME='CN=CI,O=TheHyve,L=Utrecht,C=NL' ./bin/keystore-init
        helmfile template

    - name: Start a local k8s cluster
      uses: jupyterhub/action-k3s-helm@v3
      with:
        # See available:
        # - k3s release channels at https://github.com/k3s-io/k3s/blob/HEAD/channel.yaml
        # - k3s versions at https://github.com/k3s-io/k3s/tags
        # - helm versions at https://github.com/helm/helm/tags
        k3s-channel: latest
        traefik-enabled: false

    - name: Install RADAR-Kubernetes
      run: |
        echo "kubeconfig: $KUBECONFIG"
        kubectl version
        helm version
        helmfile version
        kubectl get pods --all-namespaces

        helmfile sync --concurrency 1

    # Enable tmate debugging of manually-triggered workflows if the input option was provided
    - name: Manually triggered tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      with:
        limit-access-to-actor: true

    - name: Setup tmate session if jobs have failed
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 15
      with:
        limit-access-to-actor: true

    - name: Clean up
      if: always()
      run: |
        kubectl get pods --all-namespaces
        k3s-uninstall.sh
